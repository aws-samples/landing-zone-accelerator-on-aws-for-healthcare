##################################################################################################################
# For additional configurable services, features, and property descriptions,                                     #
# please review our network configuration reference in our README.md:                                            #
# https://awslabs.github.io/landing-zone-accelerator-on-aws/classes/_aws_accelerator_config.SecurityConfig.html  #
##################################################################################################################

homeRegion: &HOME_REGION us-east-1
centralSecurityServices:
  delegatedAdminAccount: Audit
  ebsDefaultVolumeEncryption:
    enable: true
    excludeRegions: []
  s3PublicAccessBlock:
    enable: true
    excludeAccounts: []
  scpRevertChangesConfig:
    enable: true
    snsTopicName: SecurityHigh
  macie:
    enable: false
    excludeRegions: []
    policyFindingsPublishingFrequency: FIFTEEN_MINUTES
    publishSensitiveDataFindings: true
  guardduty:
    enable: true
    excludeRegions: []
    s3Protection:
      enable: true
      excludeRegions: []
    exportConfiguration:
      enable: true
      overrideExisting: true
      destinationType: S3
      exportFrequency: FIFTEEN_MINUTES
    lifecycleRules:
      - enabled: true
        abortIncompleteMultipartUpload: 7
        expiration: 1000
        noncurrentVersionExpiration: 1000
        transitions:
          - storageClass: GLACIER_IR
            transitionAfter: 365
        noncurrentVersionTransitions:
          - storageClass: GLACIER_IR
            transitionAfter: 365
  auditManager:
    enable: false
    excludeRegions: []
    defaultReportsConfiguration:
      enable: true
      destinationType: S3
    lifecycleRules:
      - enabled: true
        abortIncompleteMultipartUpload: 7
        expiration: 1000
        noncurrentVersionExpiration: 1000
  detective:
    enable: false
    excludeRegions: []
  ##################################################################################################################
  # AWS Security Hub Configurations                                                                                #
  ##################################################################################################################
  securityHub:
    enable: true
    regionAggregation: true
    excludeRegions: []
    notificationLevel: HIGH
    snsTopicName: SecurityHigh
    standards:
      - name: AWS Foundational Security Best Practices v1.0.0
        enable: true
        controlsToDisable:
          # elb-logging-enabled rule deployed from custom Config rule
          - ELB.5
      # disable PCI-DSS standard
      - name: PCI DSS v3.2.1
        enable: false
      # disable CIS AWS Foundations Benchmark v1.2.0
      - name: CIS AWS Foundations Benchmark v1.2.0
        enable: false
      - name: CIS AWS Foundations Benchmark v1.4.0
        enable: true
      - name: NIST Special Publication 800-53 Revision 5
        enable: true
        controlsToDisable:
          # elb-logging-enabled rule deployed from custom Config rule
          - ELB.5
  ssmAutomation:
    documentSets:
      - shareTargets:
          organizationalUnits:
            - Root
        documents:
          # Calls the AWS CLI to enable access logs on a specified ELB
          - name: Accelerator-SSM-ELB-Enable-Logging
            template: ssm-documents/ssm-elb-enable-logging.yaml
          # Enables S3 encryption using KMS
          - name: Accelerator-Put-S3-Encryption
            template: ssm-documents/s3-encryption.yaml
          # Attaches instance profiles to an EC2 instance
          - name: Accelerator-Attach-IAM-Instance-Profile
            template: ssm-documents/attach-iam-instance-profile.yaml
          # Attaches AWS IAM Managed Policy to IAM Role
          - name: Accelerator-Attach-IAM-Role-Policy
            template: ssm-documents/attach-iam-role-policy.yaml
          # Enforces HTTPS on S3 Buckets
          - name: Accelerator-S3-Enforce-HTTPS
            template: ssm-documents/s3-enforce-https.yaml
accessAnalyzer:
  enable: true
iamPasswordPolicy:
  allowUsersToChangePassword: true
  hardExpiry: false
  requireUppercaseCharacters: true
  requireLowercaseCharacters: true
  requireSymbols: true
  requireNumbers: true
  minimumPasswordLength: 14
  passwordReusePrevention: 24
  maxPasswordAge: 90
awsConfig:
  enableConfigurationRecorder: true
  enableDeliveryChannel: true
  #############################################################################
  # Enabling additional config rules not implemented through AWS Security Hub #
  #############################################################################
  ruleSets:
    - deploymentTargets:
        organizationalUnits:
          - Root
      # This ruleset contains custom Config rules along with automated remediation
      rules:
        - name: accelerator-attach-ec2-instance-profile
          type: Custom
          description: Custom rule for checking EC2 instance IAM profile attachment
          inputParameters:
          customRule:
            lambda:
              sourceFilePath: custom-config-rules/attach-ec2-instance-profile.zip
              handler: index.handler
              runtime: nodejs20.x
              rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-detection-role.json
            periodic: true
            maximumExecutionFrequency: TwentyFour_Hours
            configurationChanges: true
            triggeringResources:
              lookupType: ResourceTypes
              lookupKey: ResourceTypes
              lookupValue:
                - AWS::EC2::Instance
          remediation:
            rolePolicyFile: custom-config-rules/attach-ec2-instance-profile-remediation-role.json
            automatic: true
            targetId: Accelerator-Attach-IAM-Instance-Profile
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: InstanceId
                value: RESOURCE_ID
                type: String
              - name: IamInstanceProfile
                value: ${ACCEL_LOOKUP::InstanceProfile:EC2-Default-SSM-AD-Role}
                type: StringList
        - name: accelerator-ec2-instance-profile-permission
          type: Custom
          description: Custom role to remediate EC2 instance profile permission
          inputParameters:
            AWSManagedPolicies: AmazonSSMManagedInstanceCore,AmazonSSMDirectoryServiceAccess,CloudWatchAgentServerPolicy
            ResourceId: RESOURCE_ID
          customRule:
            lambda:
              sourceFilePath: custom-config-rules/ec2-instance-profile-permissions.zip
              handler: index.handler
              runtime: nodejs20.x
              rolePolicyFile: custom-config-rules/ec2-instance-profile-permissions-detection-role.json
            periodic: true
            maximumExecutionFrequency: TwentyFour_Hours
            configurationChanges: true
            triggeringResources:
              lookupType: ResourceTypes
              lookupKey: ResourceTypes
              lookupValue:
                - AWS::IAM::Role
          remediation:
            rolePolicyFile: custom-config-rules/ec2-instance-profile-permissions-remediation-role.json
            automatic: true
            targetId: Accelerator-Attach-IAM-Role-Policy
            targetAccountName: Audit
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: ResourceId
                value: RESOURCE_ID
                type: String
              - name: AWSManagedPolicies
                value: AmazonSSMManagedInstanceCore,AmazonSSMDirectoryServiceAccess,CloudWatchAgentServerPolicy
                type: StringList
        - name: accelerator-s3-bucket-server-side-encryption-enabled
          identifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
          complianceResourceTypes:
            - AWS::S3::Bucket
          remediation:
            rolePolicyFile: custom-config-rules/bucket-sse-enabled-remediation-role.json
            automatic: true
            targetId: Accelerator-Put-S3-Encryption
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: BucketName
                value: RESOURCE_ID
                type: String
              - name: KMSMasterKey
                value: ${ACCEL_LOOKUP::KMS}
                type: StringList
        - name: accelerator-s3-bucket-enforce-https
          identifier: S3_BUCKET_SSL_REQUESTS_ONLY
          complianceResourceTypes:
            - AWS::S3::Bucket
          remediation:
            rolePolicyFile: custom-config-rules/bucket-enforce-https-remediation-role.json
            automatic: true
            targetId: Accelerator-S3-Enforce-HTTPS
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: BucketName
                value: RESOURCE_ID
                type: String
        - name: accelerator-elb-logging-enabled
          identifier: ELB_LOGGING_ENABLED
          complianceResourceTypes:
            - AWS::ElasticLoadBalancing::LoadBalancer
            - AWS::ElasticLoadBalancingV2::LoadBalancer
          inputParameters:
            s3BucketNames: ${ACCEL_LOOKUP::Bucket:elbLogs}
          remediation:
            rolePolicyFile: custom-config-rules/elb-logging-enabled-remediation-role.json
            automatic: true
            targetId: Accelerator-SSM-ELB-Enable-Logging
            retryAttemptSeconds: 60
            maximumAutomaticAttempts: 5
            parameters:
              - name: LoadBalancerArn
                value: RESOURCE_ID
                type: String
              - name: LogDestination
                value: ${ACCEL_LOOKUP::Bucket:elbLogs}
                type: StringList
    - deploymentTargets:
        organizationalUnits:
          - Root
      rules:
        - name: accelerator-iam-user-group-membership-check
          complianceResourceTypes:
            - AWS::IAM::User
          identifier: IAM_USER_GROUP_MEMBERSHIP_CHECK
        - name: accelerator-securityhub-enabled
          identifier: SECURITYHUB_ENABLED
        - name: accelerator-cloudtrail-enabled
          identifier: CLOUD_TRAIL_ENABLED
        - name: accelerator-cloudtrail-s3-dataevents-enabled
          identifier: CLOUDTRAIL_S3_DATAEVENTS_ENABLED
        - name: accelerator-emr-kerberos-enabled
          identifier: EMR_KERBEROS_ENABLED
        - name: accelerator-iam-group-has-users-check
          complianceResourceTypes:
            - AWS::IAM::Group
          identifier: IAM_GROUP_HAS_USERS_CHECK
        - name: accelerator-s3-bucket-policy-grantee-check
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_BUCKET_POLICY_GRANTEE_CHECK
        - name: accelerator-internet-gateway-authorized-vpc-only
          complianceResourceTypes:
            - AWS::EC2::InternetGateway
          identifier: INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY
        - name: accelerator-iam-no-inline-policy-check
          complianceResourceTypes:
            - AWS::IAM::User
            - AWS::IAM::Role
            - AWS::IAM::Group
          identifier: IAM_NO_INLINE_POLICY_CHECK
        - name: accelerator-cloudwatch-log-group-encrypted
          identifier: CLOUDWATCH_LOG_GROUP_ENCRYPTED
        - name: accelerator-ec2-instance-detailed-monitoring-enabled
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EC2_INSTANCE_DETAILED_MONITORING_ENABLED
        - name: accelerator-ec2-volume-inuse-check
          inputParameters:
            deleteOnTermination: "TRUE"
          complianceResourceTypes:
            - AWS::EC2::Volume
          identifier: EC2_VOLUME_INUSE_CHECK
        - name: accelerator-cloudtrail-security-trail-enabled
          identifier: CLOUDTRAIL_SECURITY_TRAIL_ENABLED
        - name: accelerator-guardduty-non-archived-findings
          # Required input parameters - modify as needed
          inputParameters:
            daysHighSev: "1"
            daysLowSev: "30"
            daysMediumSev: "7"
          identifier: GUARDDUTY_NON_ARCHIVED_FINDINGS
        - name: accelerator-sagemaker-endpoint-configuration-kms-key-configured
          identifier: SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED
        - name: accelerator-sagemaker-notebook-instance-kms-key-configured
          identifier: SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED
        - name: accelerator-dynamodb-table-encrypted-kms
          complianceResourceTypes:
            - AWS::DynamoDB::Table
          identifier: DYNAMODB_TABLE_ENCRYPTED_KMS
        - name: accelerator-codebuild-project-artifact-encryption
          complianceResourceTypes:
            - AWS::CodeBuild::Project
          identifier: CODEBUILD_PROJECT_ARTIFACT_ENCRYPTION
        - name: accelerator-dynamodb-throughput-limit-check
          identifier: DYNAMODB_THROUGHPUT_LIMIT_CHECK
        - name: accelerator-ebs-optimized-instance
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EBS_OPTIMIZED_INSTANCE
        - name: accelerator-lambda-dlq-check
          complianceResourceTypes:
            - AWS::Lambda::Function
          identifier: LAMBDA_DLQ_CHECK
        - name: accelerator-no-unrestricted-route-to-igw
          complianceResourceTypes:
            - AWS::EC2::RouteTable
          identifier: NO_UNRESTRICTED_ROUTE_TO_IGW
        - name: accelerator-secretsmanager-using-cmk
          complianceResourceTypes:
            - AWS::SecretsManager::Secret
          identifier: SECRETSMANAGER_USING_CMK
        - name: accelerator-backup-plan-min-frequency-and-min-retention-check
          identifier: BACKUP_PLAN_MIN_FREQUENCY_AND_MIN_RETENTION_CHECK
        - name: accelerator-backup-recovery-point-minimum-retention-check
          complianceResourceTypes:
            - AWS::Backup::RecoveryPoint
          identifier: BACKUP_RECOVERY_POINT_MINIMUM_RETENTION_CHECK
        - name: accelerator-backup-recovery-point-manual-deletion-disabled
          complianceResourceTypes:
            - AWS::Backup::BackupVault
          identifier: BACKUP_RECOVERY_POINT_MANUAL_DELETION_DISABLED
        - name: accelerator-athena-workgroup-encrypted-at-rest
          complianceResourceTypes:
            - AWS::Athena::WorkGroup
          identifier: ATHENA_WORKGROUP_ENCRYPTED_AT_REST
        - name: accelerator-aurora-last-backup-recovery-point-created
          complianceResourceTypes:
            - AWS::RDS::DBCluster
          identifier: AURORA_LAST_BACKUP_RECOVERY_POINT_CREATED
        - name: accelerator-aurora-meets-restore-time-target
          # Required input parameters - modify as needed
          inputParameters:
            maxRestoreTime: "5" # minutes
          complianceResourceTypes:
            - AWS::RDS::DBCluster
          identifier: AURORA_MEETS_RESTORE_TIME_TARGET
        - name: accelerator-aurora-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::RDS::DBCluster
          identifier: AURORA_RESOURCES_PROTECTED_BY_BACKUP_PLAN
        - name: accelerator-cloudfront-origin-access-identity-enabled
          complianceResourceTypes:
            - AWS::CloudFront::Distribution
          identifier: CLOUDFRONT_ORIGIN_ACCESS_IDENTITY_ENABLED
        - name: accelerator-cloudfront-security-policy-check
          complianceResourceTypes:
            - AWS::CloudFront::Distribution
          identifier: CLOUDFRONT_SECURITY_POLICY_CHECK
        - name: accelerator-cloudwatch-alarm-resource-check
          # Required input parameters - modify as needed
          inputParameters:
            resourceType: AWS::S3::Bucket
            metricName: NumberOfObjects
          identifier: CLOUDWATCH_ALARM_RESOURCE_CHECK
        - name: accelerator-custom-schema-registry-policy-attached
          complianceResourceTypes:
            - AWS::EventSchemas::Registry
          identifier: CUSTOM_SCHEMA_REGISTRY_POLICY_ATTACHED
        - name: accelerator-dynamodb-in-backup-plan
          complianceResourceTypes:
            - AWS::DynamoDB::Table
          identifier: DYNAMODB_IN_BACKUP_PLAN
        - name: accelerator-dynamodb-last-backup-recovery-point-created
          complianceResourceTypes:
            - AWS::DynamoDB::Table
          identifier: DYNAMODB_LAST_BACKUP_RECOVERY_POINT_CREATED
        - name: accelerator-dynamodb-table-encryption-enabled
          complianceResourceTypes:
            - AWS::DynamoDB::Table
          identifier: DYNAMODB_TABLE_ENCRYPTION_ENABLED
        - name: accelerator-ebs-in-backup-plan
          complianceResourceTypes:
            - AWS::EC2::Volume
          identifier: EBS_IN_BACKUP_PLAN
        - name: accelerator-ebs-last-backup-recovery-point-created
          complianceResourceTypes:
            - AWS::EC2::Volume
          identifier: EBS_LAST_BACKUP_RECOVERY_POINT_CREATED
        - name: accelerator-ec2-last-backup-recovery-point-created
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EC2_LAST_BACKUP_RECOVERY_POINT_CREATED
        - name: accelerator-ec2-managedinstance-association-compliance-status-check
          complianceResourceTypes:
            - AWS::SSM::AssociationCompliance
          identifier: EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK
        - name: accelerator-ec2-no-amazon-key-pair
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EC2_NO_AMAZON_KEY_PAIR
        - name: accelerator-ec2-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::EC2::Instance
          identifier: EC2_RESOURCES_PROTECTED_BY_BACKUP_PLAN
        - name: accelerator-efs-last-backup-recovery-point-created
          complianceResourceTypes:
            - AWS::EFS::FileSystem
          identifier: EFS_LAST_BACKUP_RECOVERY_POINT_CREATED
        - name: accelerator-efs-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::EFS::FileSystem
          identifier: EFS_RESOURCES_PROTECTED_BY_BACKUP_PLAN
        - name: accelerator-eks-cluster-secrets-encrypted
          complianceResourceTypes:
            - AWS::EKS::Cluster
          identifier: EKS_CLUSTER_SECRETS_ENCRYPTED
        - name: accelerator-elb-custom-security-policy-ssl-check
          inputParameters:
            sslProtocolsAndCiphers: Protocol-TLSv1.2,AES256-SHA256
          complianceResourceTypes:
            - AWS::ElasticLoadBalancing::LoadBalancer
          identifier: ELB_CUSTOM_SECURITY_POLICY_SSL_CHECK
          # Required parameters include resource IDs for existing Web ACL
          # Uncomment and add webACLId as needed
        # - name: accelerator-fms-shield-resource-policy-check
        #   inputParameters:
        #     webACLId: <enterid>
        #     resourceTypes: AWS::CloudFront::Distribution
        #   identifier: FMS_SHIELD_RESOURCE_POLICY_CHECK
        - name: accelerator-fsx-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::FSx::FileSystem
          identifier: FSX_RESOURCES_PROTECTED_BY_BACKUP_PLAN
        - name: accelerator-iam-customer-policy-blocked-kms-actions
          # Required input parameters - modify as needed
          inputParameters:
            blockedActionsPatterns: kms:DisableKeyRotation
          complianceResourceTypes:
            - AWS::IAM::Policy
          identifier: IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS
        - name: accelerator-iam-inline-policy-blocked-kms-actions
          # Required input parameters - modify as needed
          inputParameters:
            blockedActionsPatterns: kms:DisableKeyRotation
          complianceResourceTypes:
            - AWS::IAM::Group
            - AWS::IAM::Role
            - AWS::IAM::User
          identifier: IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS
        - name: accelerator-iam-policy-blacklisted-check
          # Required input parameters - modify as needed
          inputParameters:
            policyArns: "arn:aws:iam::aws:policy/AdministratorAccess"
          complianceResourceTypes:
            - AWS::IAM::User
            - AWS::IAM::Group
            - AWS::IAM::Role
          identifier: IAM_POLICY_BLACKLISTED_CHECK
        - name: accelerator-iam-policy-in-use
          # Required input parameters - modify as needed
          inputParameters:
            policyARN: "arn:aws:iam::aws:policy/AdministratorAccess"
          complianceResourceTypes:
            - AWS::IAM::Policy
          identifier: IAM_POLICY_IN_USE
        - name: accelerator-iam-role-managed-policy-check
          # Required input parameters - modify as needed
          inputParameters:
            managedPolicyArns: "arn:aws:iam::aws:policy/AdministratorAccess"
          complianceResourceTypes:
            - AWS::IAM::Role
          identifier: IAM_ROLE_MANAGED_POLICY_CHECK
        - name: accelerator-mq-cloudwatch-audit-logging-enabled
          complianceResourceTypes:
            - AWS::AmazonMQ::Broker
          identifier: MQ_CLOUDWATCH_AUDIT_LOGGING_ENABLED
        - name: accelerator-rds-in-backup-plan
          complianceResourceTypes:
            - AWS::RDS::DBInstance
          identifier: RDS_IN_BACKUP_PLAN
        - name: accelerator-rds-last-backup-recovery-point-created
          complianceResourceTypes:
            - AWS::RDS::DBInstance
          identifier: RDS_LAST_BACKUP_RECOVERY_POINT_CREATED
        - name: accelerator-redshift-audit-logging-enabled
          complianceResourceTypes:
            - AWS::Redshift::Cluster
          identifier: REDSHIFT_AUDIT_LOGGING_ENABLED
        - name: accelerator-redshift-cluster-configuration-check
          inputParameters:
            clusterDbEncrypted: "true"
            loggingEnabled: "true"
          complianceResourceTypes:
            - AWS::Redshift::Cluster
          identifier: REDSHIFT_CLUSTER_CONFIGURATION_CHECK
        - name: accelerator-s3-account-level-public-access-blocks
          complianceResourceTypes:
            - AWS::S3::AccountPublicAccessBlock
          identifier: S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS
        - name: accelerator-s3-bucket-policy-not-more-permissive
          # Required input parameters - modify as needed
          inputParameters:
            controlPolicy: '{"Version":"2012-10-17","Statement":[{"Action":"s3:*","Effect":"Allow","Resource":"*","Principal":"*"}]}'
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE
        - name: accelerator-s3-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::S3::Bucket
          identifier: S3_RESOURCES_PROTECTED_BY_BACKUP_PLAN
        - name: accelerator-shield-drt-access
          identifier: SHIELD_DRT_ACCESS
        - name: accelerator-sns-topic-message-delivery-notification-enabled
          complianceResourceTypes:
            - AWS::SNS::Topic
          identifier: SNS_TOPIC_MESSAGE_DELIVERY_NOTIFICATION_ENABLED
        - name: accelerator-storagegateway-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::StorageGateway::Volume
          identifier: STORAGEGATEWAY_RESOURCES_PROTECTED_BY_BACKUP_PLAN
        - name: accelerator-virtualmachine-resources-protected-by-backup-plan
          complianceResourceTypes:
            - AWS::BackupGateway::VirtualMachine
          identifier: VIRTUALMACHINE_RESOURCES_PROTECTED_BY_BACKUP_PLAN

cloudWatch:
  metricSets:
    - regions:
        - {{AcceleratorHomeRegion}}
      #####################################
      # With landing zone version 3.0, AWS Control Tower now supports organization-level AWS CloudTrail trails.                                          #
      # Going forward from landing zone 3.0, AWS Control Tower no longer will support account-level trails that AWS manages.                             #
      # If your environment runs on prior version (3.0) of landing zone, you can change deployment targets for the metrics to Root organizational units  #
      # Metrics deployment target should be management account for environment with landing zone version 3.0                                             #
      # Please refer https://docs.aws.amazon.com/controltower/latest/userguide/2022-all.html#version-3.0 for more information                            #
      #####################################
      deploymentTargets:
        accounts:
          - Management
      metrics:
        # CIS 1.7 – Avoid the use of the "root" account
        - filterName: RootAccountUsageMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: '{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}'
          metricNamespace: LogMetrics
          metricName: RootAccountUsage
          metricValue: "1"
        # CIS 4.4 – Ensure a log metric filter and alarm exist for IAM policy changes
        - filterName: IAMPolicyChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=DeleteGroupPolicy) || ($.eventName=DeleteRolePolicy) || ($.eventName=DeleteUserPolicy) || ($.eventName=PutGroupPolicy) || ($.eventName=PutRolePolicy) || ($.eventName=PutUserPolicy) || ($.eventName=CreatePolicy) || ($.eventName=DeletePolicy) || ($.eventName=CreatePolicyVersion) || ($.eventName=DeletePolicyVersion) || ($.eventName=AttachRolePolicy) || ($.eventName=DetachRolePolicy) || ($.eventName=AttachUserPolicy) || ($.eventName=DetachUserPolicy) || ($.eventName=AttachGroupPolicy) || ($.eventName=DetachGroupPolicy)}"
          metricNamespace: LogMetrics
          metricName: IAMPolicyChanges
          metricValue: "1"
        # CIS 4.5 – Ensure a log metric filter and alarm exist for CloudTrail configuration changes
        - filterName: CloudTrailChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=CreateTrail) || ($.eventName=UpdateTrail) || ($.eventName=DeleteTrail) || ($.eventName=StartLogging) || ($.eventName=StopLogging)}"
          metricNamespace: LogMetrics
          metricName: CloudTrailChanges
          metricValue: "1"
        # CIS 4.6 – Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
        - filterName: ConsoleAuthenticationFailureMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: '{($.eventName=ConsoleLogin) && ($.errorMessage="Failed authentication")}'
          metricNamespace: LogMetrics
          metricName: ConsoleAuthenticationFailure
          metricValue: "1"
        # CIS 4.7 – Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
        - filterName: DisableOrDeleteCMKMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventSource=kms.amazonaws.com) && (($.eventName=DisableKey) || ($.eventName=ScheduleKeyDeletion))}"
          metricNamespace: LogMetrics
          metricName: DisableOrDeleteCMK
          metricValue: "1"
        # CIS 4.8 – Ensure a log metric filter and alarm exist for S3 bucket policy changes
        - filterName: S3BucketPolicyChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventSource=s3.amazonaws.com) && (($.eventName=PutBucketAcl) || ($.eventName=PutBucketPolicy) || ($.eventName=PutBucketCors) || ($.eventName=PutBucketLifecycle) || ($.eventName=PutBucketReplication) || ($.eventName=DeleteBucketPolicy) || ($.eventName=DeleteBucketCors) || ($.eventName=DeleteBucketLifecycle) || ($.eventName=DeleteBucketReplication))}"
          metricNamespace: LogMetrics
          metricName: S3BucketPolicyChanges
          metricValue: "1"
        # CIS 4.9 – Ensure a log metric filter and alarm exist for AWS Config configuration changes
        - filterName: AWSConfigChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventSource=config.amazonaws.com) && (($.eventName=StopConfigurationRecorder) || ($.eventName=DeleteDeliveryChannel) || ($.eventName=PutDeliveryChannel) || ($.eventName=PutConfigurationRecorder))}"
          metricNamespace: LogMetrics
          metricName: AWSConfigChanges
          metricValue: "1"
        # CIS 4.10 – Ensure a log metric filter and alarm exist for security group changes
        - filterName: SecurityGroupChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=AuthorizeSecurityGroupIngress) || ($.eventName=AuthorizeSecurityGroupEgress) || ($.eventName=RevokeSecurityGroupIngress) || ($.eventName=RevokeSecurityGroupEgress) || ($.eventName=CreateSecurityGroup) || ($.eventName=DeleteSecurityGroup)}"
          metricNamespace: LogMetrics
          metricName: SecurityGroupChanges
          metricValue: "1"
        # CIS 4.11 – Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
        - filterName: NetworkACLChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=CreateNetworkAcl) || ($.eventName=CreateNetworkAclEntry) || ($.eventName=DeleteNetworkAcl) || ($.eventName=DeleteNetworkAclEntry) || ($.eventName=ReplaceNetworkAclEntry) || ($.eventName=ReplaceNetworkAclAssociation)}"
          metricNamespace: LogMetrics
          metricName: NetworkACLChanges
          metricValue: "1"
        # CIS 4.12 – Ensure a log metric filter and alarm exist for changes to network gateways
        - filterName: NetworkGatewayChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=CreateCustomerGateway) || ($.eventName=DeleteCustomerGateway) || ($.eventName=AttachInternetGateway) || ($.eventName=CreateInternetGateway) || ($.eventName=DeleteInternetGateway) || ($.eventName=DetachInternetGateway)}"
          metricNamespace: LogMetrics
          metricName: NetworkGatewayChanges
          metricValue: "1"
        # CIS 4.13 – Ensure a log metric filter and alarm exist for route table changes
        - filterName: RouteTableChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=CreateRoute) || ($.eventName=CreateRouteTable) || ($.eventName=ReplaceRoute) || ($.eventName=ReplaceRouteTableAssociation) || ($.eventName=DeleteRouteTable) || ($.eventName=DeleteRoute) || ($.eventName=DisassociateRouteTable)}"
          metricNamespace: LogMetrics
          metricName: RouteTableChanges
          metricValue: "1"
        # CIS 4.14 – Ensure a log metric filter and alarm exist for VPC changes
        - filterName: VPCChangesMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: "{($.eventName=CreateVpc) || ($.eventName=DeleteVpc) || ($.eventName=ModifyVpcAttribute) || ($.eventName=AcceptVpcPeeringConnection) || ($.eventName=CreateVpcPeeringConnection) || ($.eventName=DeleteVpcPeeringConnection) || ($.eventName=RejectVpcPeeringConnection) || ($.eventName=AttachClassicLinkVpc) || ($.eventName=DetachClassicLinkVpc) || ($.eventName=DisableVpcClassicLink) || ($.eventName=EnableVpcClassicLink)}"
          metricNamespace: LogMetrics
          metricName: VPCChanges
          metricValue: "1"
        # Monitor for the use of breakglass accounts
        - filterName: BreakglassAccountUsageMetricFilter
          logGroupName: aws-controltower/CloudTrailLogs
          filterPattern: '{ ($.userIdentity.userName = "breakGlassUser0*") && ($.userIdentity.invokedBy NOT EXISTS) && ($.eventType != "AwsServiceEvent") }'
          metricNamespace: LogMetrics
          metricName: BreakglassAccountUsage
          metricValue: "1"
  alarmSets:
    - regions:
        - {{AcceleratorHomeRegion}}
      #####################################
      # With landing zone version 3.0, AWS Control Tower now supports organization-level AWS CloudTrail trails.                                          #
      # Going forward from landing zone 3.0, AWS Control Tower no longer will support account-level trails that AWS manages.                             #
      # If your environment runs on prior version (3.0) of landing zone, you can change deployment targets for the metrics to Root organizational units  #
      # Metrics deployment target should be management account for environment with landing zone version 3.0                                             #
      # Please refer https://docs.aws.amazon.com/controltower/latest/userguide/2022-all.html#version-3.0 for more information                            #
      #####################################
      deploymentTargets:
        accounts:
          - Management
      alarms:
        # CIS 1.7 – Avoid the use of the "root" account
        - alarmName: CIS-1.7-RootAccountUsage
          alarmDescription: Alarm for usage of "root" account
          snsTopicName: SecurityHigh
          metricName: RootAccountUsage
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.4 – Ensure a log metric filter and alarm exist for IAM policy changes
        - alarmName: CIS-4.4-IAMPolicyChanges
          alarmDescription: Alarm for IAM policy changes
          snsTopicName: SecurityHigh
          metricName: IAMPolicyChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.5 – Ensure a log metric filter and alarm exist for CloudTrail configuration changes
        - alarmName: CIS-4.5-CloudTrailChanges
          alarmDescription: Alarm for CloudTrail configuration changes
          snsTopicName: SecurityHigh
          metricName: CloudTrailChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.6 – Ensure a log metric filter and alarm exist for AWS Management Console authentication failures
        - alarmName: CIS-4.6-ConsoleAuthenticationFailure
          alarmDescription: Alarm exist for AWS Management Console authentication failures
          snsTopicName: SecurityHigh
          metricName: ConsoleAuthenticationFailure
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.7 – Ensure a log metric filter and alarm exist for disabling or scheduled deletion of customer created CMKs
        - alarmName: CIS-4.7-DisableOrDeleteCMK
          alarmDescription: Alarm for disabling or scheduled deletion of customer created CMKs
          snsTopicName: SecurityHigh
          metricName: DisableOrDeleteCMK
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.8 – Ensure a log metric filter and alarm exist for S3 bucket policy changes
        - alarmName: CIS-4.8-S3BucketPolicyChanges.
          alarmDescription: Alarm for S3 bucket policy changes
          snsTopicName: SecurityHigh
          metricName: S3BucketPolicyChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.9 – Ensure a log metric filter and alarm exist for AWS Config configuration changes
        - alarmName: CIS-4.9-AWSConfigChanges
          alarmDescription: Alarm for AWS Config configuration changes
          snsTopicName: SecurityHigh
          metricName: AWSConfigChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.10 – Ensure a log metric filter and alarm exist for security group changes
        - alarmName: CIS-4.10-SecurityGroupChanges
          alarmDescription: Alarm for security group changes
          snsTopicName: SecurityHigh
          metricName: SecurityGroupChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.11 – Ensure a log metric filter and alarm exist for changes to Network Access Control Lists (NACL)
        - alarmName: CIS-4.11-NetworkACLChanges
          alarmDescription: Alarm for changes to Network Access Control Lists (NACL)
          snsTopicName: SecurityHigh
          metricName: NetworkACLChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.12 – Ensure a log metric filter and alarm exist for changes to network gateways
        - alarmName: CIS-4.12-NetworkGatewayChanges
          alarmDescription: Alarm for changes to network gateways
          snsTopicName: SecurityHigh
          metricName: NetworkGatewayChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.13 – Ensure a log metric filter and alarm exist for route table changes
        - alarmName: CIS-4.13-RouteTableChanges
          alarmDescription: Alarm for route table changes
          snsTopicName: SecurityHigh
          metricName: RouteTableChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Average
          threshold: 1
          treatMissingData: notBreaching
        # CIS 4.14 – Ensure a log metric filter and alarm exist for VPC changes
        - alarmName: CIS-3.14-VPCChanges
          alarmDescription: Alarm for VPC changes
          snsTopicName: SecurityHigh
          metricName: VPCChanges
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
        # Ensure a log metric filter and alarm exist for breakglass account usage
        - alarmName: BreakglassAccountUsage
          alarmDescription: Alarm for usage of "breakglass" accounts
          snsTopicName: SecurityHigh
          metricName: BreakglassAccountUsage
          namespace: LogMetrics
          comparisonOperator: GreaterThanOrEqualToThreshold
          evaluationPeriods: 1
          period: 300
          statistic: Sum
          threshold: 1
          treatMissingData: notBreaching
